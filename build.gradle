apply plugin : "java"
repositories
{
mavenCentral()
//this method is defined in gradle , ivy is also supported 
//additionally mavenLocal() is also defined
}

configurations
{
myConfig
}

dependencies {
compile "org.apache.commons:commons-lang3:3.3.2"
myConfig "org.apache.commons:commons-lang3:3.3.2"
}


task hello(group : 'greeting', description : 'Greets you')
hello.doLast {
println 'hethro'
}
hello.doFirst {
println 'hethro first'
}
//will run in config phase
hello {
println 'I am config phase'
//ext.greetingToVijay="hello bhai"
}
//Another short cut way of saying doLast
hello << {
    println "This is done 2nd last"
ext.greeting="hello bhai"
}

hello << 
{
println "$greeting"
}

task hello1(type: GreetingTask)

class GreetingTask extends DefaultTask {
    @TaskAction
    def greet() {
        println 'hello from GreetingTask'
    }
}

/*
task runJar(type:Exec, dependsOn:jar) {
executable 'java'
args  '-jar' , "$jar.archivePath" , "Hello World"
}
*/


task run(type:JavaExec, dependsOn:classes) {
main 'com.chetan.gradleDemo.MainApp'
classpath sourceSets.main.runtimeClasspath
args  'Hello world'


}

//when we apply plugin and run tasks or build it will do actions relevant to java 
sourceSets
{
main.java.srcDir "src/main"
}
//without sourcesets we will not be able to get the class directory and some other directories like dependency-cache

//jar task in gradle 
jar{
//In a from we give acollecvtion of file and compile is a configuration which means collection of files and as compile is a configuration 
//we give it like this 
//collect is from groovy
//from configurations.compile.collect{entry -> zipTree entry}
from configurations.myConfig.collect{entry -> zipTree entry}
manifest.attributes "Main-Class" : "com.chetan.gradleDemo.MainApp"
}
